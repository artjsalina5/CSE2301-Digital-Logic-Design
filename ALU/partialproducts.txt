// 4-bit Binary Multiplier Using AND Gates and Adders (7483)

COMPONENT MULTIPLIER_4bit

INPUTS
    A0, A1, A2, A3: 4-bit input A
    B0, B1, B2, B3: 4-bit input B

OUTPUTS
    P0, P1, P2, P3, P4, P5, P6, P7: 8-bit product output

SIGNALS
    P0_temp, P1_temp, P2_temp, P3_temp: Temporary signals for partial products
    Sum0, Sum1, Sum2: Signals for adder outputs
    Carry0, Carry1, Carry2: Carry signals from adders

BEGIN

// ------------------- PARTIAL PRODUCTS USING AND GATES -------------------

// First row of partial products (AND gates)
    GATE AND_GATE1 (7408)
        A0, B0 -> P0; // P0 = A0 * B0 (LSB)

    GATE AND_GATE2 (7408)
        A1, B0 -> P1_temp; // A1 * B0

    GATE AND_GATE3 (7408)
        A0, B1 -> P1_temp_2; // A0 * B1

    GATE AND_GATE4 (7408)
        A2, B0 -> P2_temp; // A2 * B0

    GATE AND_GATE5 (7408)
        A1, B1 -> P2_temp_2; // A1 * B1

    GATE AND_GATE6 (7408)
        A3, B0 -> P3_temp; // A3 * B0

// ------------------- XOR GATES FOR PARTIAL PRODUCTS -------------------

// Combine partial products using XOR
    GATE XOR_GATE1 (7486)
        P1_temp, P1_temp_2 -> Sum0; // XOR to generate P1

    GATE XOR_GATE2 (7486)
        P2_temp, P2_temp_2 -> Sum1; // XOR to generate P2

    GATE XOR_GATE3 (7486)
        P3_temp, P2_temp_2 -> Sum2; // XOR to generate P3

// ------------------- ADDERS FOR PARTIAL PRODUCTS -------------------

// First addition (lower bits)
    GATE ADDER1 (7483)
        P1_temp, Sum0, Carry0 -> P1; // Add partial products for P1

// Second addition (middle bits)
    GATE ADDER2 (7483)
        P2_temp, Sum1, Carry1 -> P2; // Add partial products for P2

// Third addition (upper bits)
    GATE ADDER3 (7483)
        P3_temp, Sum2, Carry2 -> P3; // Add partial products for P3

// ------------------- FINAL OUTPUT CONNECTIONS -------------------
    P1 -> C1;
    P2 -> C2;
    P3 -> C3;
    Sum1 -> C4;
    Sum2 -> C5;
    Carry0 -> C6;
    Carry1 -> C7;

END COMPONENT
